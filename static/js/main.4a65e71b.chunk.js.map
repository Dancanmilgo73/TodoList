{"version":3,"sources":["redux/actionTypes.js","components/AddTodo.js","redux/actions/todoActions.js","components/TodoItem.js","components/Footer.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/todoReducer.js","redux/store.js","index.js"],"names":["ADDTODO","REMOVE__TODO","TODO__ISCOMPLETE","AddTodo","useState","value","setValue","todo","setTodo","dispatch","useDispatch","useEffect","title","type","payload","addTodo","className","placeholder","onChange","e","target","onClick","prevState","id","Date","now","completed","console","log","TodoItem","isComplete","deleteTodo","Footer","completeItems","length","App","todos","useSelector","state","map","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a65e71b.chunk.js","sourcesContent":["export const ADDTODO = \"ADDTODO\";\nexport const REMOVE__TODO = \"REMOVE__TODO\";\nexport const TODO__ISCOMPLETE = \"TODO__ISCOMPLETE\";\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/actions/todoActions\";\n\nexport default function AddTodo() {\n  const [value, setValue] = useState(\"\");\n  const [todo, setTodo] = useState({});\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  const handleSubmit = () => {\n    // e.preventDefault();\n    if (value) {\n      setTodo((prevState) => {\n        return { ...prevState, title: value, id: Date.now(), completed: false };\n      });\n      // dispatch(addTodo(todo));\n      setValue(\"\");\n      return;\n    }\n    console.log(\"nothing\");\n  };\n  useEffect(() => {\n    if (todo.title) {\n      dispatch(addTodo(todo));\n    }\n    // console.log(todo);\n  }, [todo, dispatch]);\n\n  // console.log(todos);\n  return (\n    <div className=\"addTodo__con\">\n      <input\n        type=\"text\"\n        placeholder=\"Add to do...\"\n        onChange={handleChange}\n        value={value}\n      />\n      <button type=\"submit\" onClick={handleSubmit}>\n        Submit\n      </button>\n    </div>\n  );\n}\n","import { ADDTODO, REMOVE__TODO, TODO__ISCOMPLETE } from \"../actionTypes\";\n\nexport const addTodo = (todo) => {\n  return {\n    type: ADDTODO,\n    payload: todo,\n  };\n};\nexport const deleteTodo = (id) => {\n  return {\n    type: REMOVE__TODO,\n    payload: id,\n  };\n};\nexport const isComplete = (id) => {\n  return {\n    type: TODO__ISCOMPLETE,\n    payload: id,\n  };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, isComplete } from \"../redux/actions/todoActions\";\n\nexport default function TodoItem({ title, id, completed }) {\n\tconst dispatch = useDispatch();\n\t// const [complete, setComplete] =useState(false);\n\n\treturn (\n\t\t<div className={`todoItem__con ${completed && \"todoComplete\"}`}>\n\t\t\t<div>\n\t\t\t\t<input type='checkbox' onChange={() => dispatch(isComplete(id))} />\n\t\t\t</div>\n\t\t\t<p>{title}</p>\n\n\t\t\t<div className='todoItem__remove'>\n\t\t\t\t<button onClick={() => dispatch(deleteTodo(id))}>Delete</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nexport default function Footer({ completeItems }) {\n  return (\n    <div className=\"footer\">\n      <h3>Total Complete items: {completeItems.length}</h3>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { useSelector } from \"react-redux\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoItem from \"./components/TodoItem\";\nimport Footer from \"./components/Footer\";\nfunction App() {\n  const { todos } = useSelector((state) => state.todos);\n  return (\n    <div className=\"app\">\n      <h3>My To Do List</h3>\n      <AddTodo />\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          title={todo.title}\n          id={todo.id}\n          completed={todo.completed}\n        />\n      ))}\n\n      <Footer completeItems={todos.filter((todo) => todo.completed === true)} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { todoReducer } from \"./todoReducer\";\nconst rootReducer = combineReducers({ todos: todoReducer });\nexport default rootReducer;\n","import { ADDTODO, REMOVE__TODO, TODO__ISCOMPLETE } from \"../actionTypes\";\nexport const todoReducer = (\n\tstate = {\n\t\ttodos: [{ title: \"Remember to add to do\", id: 1, completed: false }],\n\t},\n\taction\n) => {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase ADDTODO:\n\t\t\treturn { ...state, todos: [...state.todos, payload] };\n\t\tcase REMOVE__TODO:\n\t\t\treturn {\n\t\t\t\ttodos: [...state.todos.filter((todo) => todo.id !== payload)],\n\t\t\t};\n\t\tcase TODO__ISCOMPLETE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: [\n\t\t\t\t\t...state.todos.map((todo) => {\n\t\t\t\t\t\tif (todo.id === payload) {\n\t\t\t\t\t\t\ttodo.completed = !todo.completed;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn todo;\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn { ...state };\n\t}\n};\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/index\";\n// import thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, {}, composeWithDevTools());\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}